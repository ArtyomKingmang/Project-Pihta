(use-ctx pht
	(progn
		(cls [] Test0 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(inc i)))))
		(cls [] Test1 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(inc i)))))
		(cls [] Test2 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(inc- i)))))
		(cls [] Test3 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(dec i)))))
		(cls [] Test4 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(dec i)))))
		(cls [] Test5 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(dec- i)))))))(use-ctx pht
	(progn
		(cls [] Test0 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(inc i)))))
		(cls [] Test1 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(inc i)))))
		(cls [] Test2 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(inc- i)))))
		(cls [] Test3 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(dec i)))))
		(cls [] Test4 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(dec i)))))
		(cls [] Test5 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 0]])
					(as ^dynamic
						(dec- i)))))))(use-ctx pht
	(progn
		(test-fn
			0
			(def
				[
					[
						i
						0
					]
				])
			(inc
				i))
		(test-fn
			1
			(def
				[
					[
						i
						0
					]
				])
			(inc
				i))
		(test-fn
			2
			(def
				[
					[
						i
						0
					]
				])
			(inc-
				i))
		(test-fn
			3
			(def
				[
					[
						i
						0
					]
				])
			(dec
				i))
		(test-fn
			4
			(def
				[
					[
						i
						0
					]
				])
			(dec
				i))
		(test-fn
			5
			(def
				[
					[
						i
						0
					]
				])
			(dec-
				i))))