(use-ctx pht
	(progn
		(cls [] Test0 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(add
							12
							21)))))
		(cls [] Test1 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(sub
							33
							12)))))
		(cls [] Test2 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(sub
							33
							12
							21)))))
		(cls [] Test3 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(mul
							2
							2
							3)))))
		(cls [] Test4 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(div
							12
							3)))))
		(cls [] Test5 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(rem
							3
							2)))))
		(cls [] Test6 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(shift-right
							1024
							10)))))
		(cls [] Test7 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(shift-left
							1
							10)))))
		(cls [] Test8 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(add
							12
							21)))))
		(cls [] Test9 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(sub
							33
							12)))))
		(cls [] Test10 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(sub
							33
							12
							21)))))
		(cls [] Test11 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(mul
							2
							2
							3)))))
		(cls [] Test12 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(div
							12
							3)))))
		(cls [] Test13 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(rem
							3
							2)))))
		(cls [] Test14 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(shift-right
							1024
							10)))))
		(cls [] Test15 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(as ^dynamic
						(shift-left
							1
							10)))))))