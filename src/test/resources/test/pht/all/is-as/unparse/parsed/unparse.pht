(use-ctx pht
	(progn
		(cls [] Test0 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						true))))
		(cls [] Test1 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						false))))
		(cls [] Test2 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						false))))
		(cls [] Test3 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(as ^long
							i)))))
		(cls [] Test4 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(as ^float
							j)))))
		(cls [] Test5 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(as ^java.lang.Object
							j)))))
		(cls [] Test6 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(is ^java.lang.Object
							o)))))
		(cls [] Test7 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(is ^java.lang.Object
							s)))))
		(cls [] Test8 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						s))))))(use-ctx pht
	(progn
		(cls [] Test0 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						true))))
		(cls [] Test1 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						false))))
		(cls [] Test2 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						false))))
		(cls [] Test3 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(as ^long
							i)))))
		(cls [] Test4 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(as ^float
							j)))))
		(cls [] Test5 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(as ^java.lang.Object
							j)))))
		(cls [] Test6 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(is ^java.lang.Object
							o)))))
		(cls [] Test7 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						(is ^java.lang.Object
							s)))))
		(cls [] Test8 [^java.lang.Object]
			(@static
				(defn [] test ^dynamic []
					(def [
						[^int i 12]
						[^long j 21l]
						[^java.lang.Object o (new ^java.lang.Object)]
						[^java.lang.String s "Слава России!"]])
					(as ^dynamic
						s))))))(use-ctx pht
	(progn
		(defmacro
			init
			[]
			(def
				[
					[
						i
						12
					]
					[
						j
						21l
					]
					[
						o
						(new
							^Object)
					]
					[
						s
						"Слава России!"
					]
				]))
		(test-fn
			0
			(macro init)
			(is
				^int
				i))
		(test-fn
			1
			(macro init)
			(is
				^long
				i))
		(test-fn
			2
			(macro init)
			(is
				^Object
				i))
		(test-fn
			3
			(macro init)
			(as
				^long
				i))
		(test-fn
			4
			(macro init)
			(as
				^float
				j))
		(test-fn
			5
			(macro init)
			(as
				^Object
				j))
		(test-fn
			6
			(macro init)
			(is
				^Object
				o))
		(test-fn
			7
			(macro init)
			(is
				^Object
				s))
		(test-fn
			8
			(macro init)
			(as
				^Object
				s))))