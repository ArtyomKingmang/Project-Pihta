(load-ctx
	(use-ctx pht pht/jvm
		(progn
			(cls [] TestA [^java.lang.Object]
				(@static
					(progn-
						(@static
							(def [
								[i ^int]])
							(defn [] setI ^void [[i ^int]]
								(fset
									^TestA
									i
									(get i)))
							(defn [] getI ^int []
								(fget
									^TestA
									i))))))
			(@test
				(cls [] Test0 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(mcall
								^TestA
								setI
								12)
							(as ^dynamic
								(mcall
									^TestA
									getI))))))
			(cls [] TestB [^java.lang.Object]
				(ctor []
					(mcall
						super
						<init>))
				(progn-
					(progn-
						(def [
							[i ^int]])
						(defn [] setI ^void [[i ^int]]
							(fset
								(get this)
								i
								(get i)))
						(defn [] getI ^int []
							(fget
								(get this)
								i)))))
			(@test
				(cls [] Test1 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(def [
								[^TestB o (new ^TestB)]])
							(mcall
								(get o)
								setI
								21)
							(as ^dynamic
								(fget
									(get o)
									i)))))))))