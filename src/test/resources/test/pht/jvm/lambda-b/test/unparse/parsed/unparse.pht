(load-ctx
	(use-ctx pht pht/jvm
		(progn
			(import
				java
				[
					[
						types
						[
							java.util.function.Supplier
							java.util.function.Function
						]
					]
				])
			(cls
				TestA
				[
					^Object
				]
				(@static
					(defn
						call
						^Object
						[
							[
								lambda
								^Supplier
							]
						]
						(mcall
							lambda
							get))))
			(test-fn
				0
				(mcall
					^TestA
					call
					(fn
						[]
						[]
						"Glory To Russia!")))
			(test-fn
				1
				(def
					[
						[
							i
							44
						]
						[
							j
							88
						]
					])
				(mcall
					^TestA
					call
					(fn
						[
							i
							j
						]
						[]
						(add
							i
							j))))
			(test-fn
				2
				(def
					[
						[
							i
							44
						]
						[
							j
							88
						]
					])
				(mcall
					^TestA
					call
					(fn
						[
							i
							j
						]
						[]
						(add
							i
							j))))
			(cls
				TestB
				[
					^Object
				]
				(@static
					(defn
						call
						^Object
						[
							[
								lambda
								^Function
							]
						]
						(mcall
							lambda
							apply
							(as
								^Object
								44)))))
			(test-fn
				3
				(def
					[
						[
							i
							44
						]
						[
							j
							88
						]
					])
				(mcall
					^TestB
					call
					(fn
						[
							i
							j
						]
						[
							k
						]
						(add
							i
							j
							k)))))))