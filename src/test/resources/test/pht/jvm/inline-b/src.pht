(progn
    (cls TestA [^Object]
        (ctor [] (ccall))
        (@inline (defn foo ^String [] "Bar!")))
    (test-fn 0 (#foo (new ^TestA)))

    (cls TestB [^Object]
        (ctor [] (ccall))
        (@inline (defn foo ^int [[other ^int]] (+ 1900 other))))
    (test-fn 1 (#foo (new ^TestB) 41))

    (cls TestC [^Object]
        (def [[i ^int]])
        (ctor [[i ^int]]
            (ccall)
            (set this/i i))
        (@inline (defn bar ^int [[other ^int]] (+ this/i other))))
    (test-fn 2 (#bar (new ^TestC 1900) 45)))