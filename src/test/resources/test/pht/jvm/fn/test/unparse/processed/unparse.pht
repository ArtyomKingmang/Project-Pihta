(use-ctx pht pht/jvm
	(progn
		(cls [] TestA [^java.lang.Object]
			(@static
				(defn [] test ^void [[o ^java.lang.Runnable]]
					(mcall
						(get o)
						run))
				(cls [] Test0 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(mcall
								^TestA
								test
								(progn
									(obj [] PhtLambda$1657675766 [^java.lang.Object ^java.lang.Runnable]
										(defn [] run ^void []
											(unit))))))))))
		(cls [] TestB [^java.lang.Object]
			(@static
				(defn [] test ^void [[o ^java.lang.Runnable]]
					(mcall
						(get o)
						run))
				(cls [] Test1 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(mcall
								^TestB
								test
								(progn
									(obj [] PhtLambda$1657675759 [^java.lang.Object ^java.lang.Runnable]
										(defn [] run ^void []
											(unit))))))))))
		(cls [] TestC [^java.lang.Object]
			(@static
				(defn [] test ^void [[o ^java.lang.Runnable]]
					(mcall
						(get o)
						run))
				(cls [] Test2 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(def [
								[^int i 12]
								[^int j 21]])
							(mcall
								^TestC
								test
								(progn
									(cls [] PhtLambda$1657675751 [^java.lang.Object ^java.lang.Runnable]
										(def [
											[i ^int]
											[j ^int]])
										(ctor [[i ^int][j ^int]]
											(mcall
												super
												<init>)
											(fset
												(get this)
												i
												(get i))
											(fset
												(get this)
												j
												(get j)))
										(defn [] run ^void []
											(unit)))
									(new ^PhtLambda$1657675751
										(get i)
										(get j)))))))))
		(cls [] TestD [^java.lang.Object]
			(@static
				(defn [] test ^java.lang.String [[o ^java.util.function.Supplier]]
					(as ^java.lang.String
						(mcall
							(get o)
							get)))
				(cls [] Test3 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(as ^dynamic
								(mcall
									^TestD
									test
									(progn
										(obj [] PhtLambda$1657675744 [^java.lang.Object ^java.util.function.Supplier]
											(defn [] get ^java.lang.Object []
												"Foo D!"))))))))))
		(cls [] TestE [^java.lang.Object]
			(@static
				(defn [] test ^java.lang.String [[o ^java.util.function.Supplier]]
					(as ^java.lang.String
						(mcall
							(get o)
							get)))
				(cls [] Test4 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(as ^dynamic
								(mcall
									^TestE
									test
									(progn
										(obj [] PhtLambda$1657675737 [^java.lang.Object ^java.util.function.Supplier]
											(defn [] get ^java.lang.Object []
												"Foo E!"))))))))))
		(cls [] TestF [^java.lang.Object]
			(@static
				(defn [] test ^java.lang.Object [[o ^java.util.function.Supplier]]
					(mcall
						(get o)
						get))
				(cls [] Test5 [^java.lang.Object]
					(@static
						(defn [] test ^dynamic []
							(def [
								[^int i 12]
								[^int j 21]])
							(as ^dynamic
								(mcall
									^TestF
									test
									(progn
										(cls [] PhtLambda$1657675729 [^java.lang.Object ^java.util.function.Supplier]
											(def [
												[i ^int]
												[j ^int]])
											(ctor [[i ^int][j ^int]]
												(mcall
													super
													<init>)
												(fset
													(get this)
													i
													(get i))
												(fset
													(get this)
													j
													(get j)))
											(defn [] get ^java.lang.Object []
												(as ^java.lang.Object
													(add
														(get i)
														(get j)))))
										(new ^PhtLambda$1657675729
											(get i)
											(get j))))))))))))