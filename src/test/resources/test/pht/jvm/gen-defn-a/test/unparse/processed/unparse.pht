(use-ctx pht pht/jvm
	(progn
		(cls [] TestA [^java.lang.Object]
			(@static
				(defn [[T ^java.lang.Object]] foo T^ []
					(as ^java.lang.Object
						nil))))
		(@test
			(cls [] Test0 [^java.lang.Object]
				(@static
					(defn [] test ^dynamic []
						(as ^dynamic
							"java.lang.Object")))))
		(@test
			(cls [] Test1 [^java.lang.Object]
				(@static
					(defn [] test ^dynamic []
						(as ^dynamic
							"java.lang.String")))))
		(cls [] TestB [^java.lang.Object]
			(@static
				(defn [[T ^java.lang.Object]] foo T^ [[o T^]]
					(get o))))
		(@test
			(cls [] Test2 [^java.lang.Object]
				(@static
					(defn [] test ^dynamic []
						(as ^dynamic
							"java.lang.Class")))))))