(progn
    (cls TestA [^Object]
        (ctor [] (ccall))
        (defn fooA ^void [] (println "FooA!")))
    (cls TestB [^Object]
        (ctor [] (ccall))
        (defn fooB ^void [] (println "FooB!")))
    (app-fn
        (def [
            [o (new ^TestA)]
            [o (new ^TestB)]])
        (#fooA o)
        (#fooB o)))